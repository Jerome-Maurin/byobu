#!/bin/sh -e
#
#    byobu-status
#    Copyright (C) 2008 Canonical Ltd.
#
#    Authors: Dustin Kirkland <kirkland@canonical.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

PKG="byobu"

migrate() {
	OLDPKG="screen-profiles"
        # Rename the config dir
        mv "$HOME/.$OLDPKG" "$HOME/.$PKG"
        ln -s "$HOME/.$PKG" "$HOME/.$OLDPKG"
        # Replace all instances of the old package name with the new
        find "$HOME/.$PKG" -type f | xargs sed -i "s/$OLDPKG/$PKG/g"
        # Fix the chosen profile symlink
        if [ -h "$HOME/.$PKG/profile" ]; then
                # Determine the chosen profile color
                profile=`stat "$HOME/.$PKG/profile" | head -n1 | sed "s:^.*[/-]::" | sed "s:'$::"`
                # Try to set that color, if it exists, otherwise default to light
                select-screen-profile -s "$profile" || select-screen-profile -s "light"
        fi
}

# If the old config dir exists, but the new one doesn't, provide a migration mechanism.
[ -d "$HOME/.$OLDPKG"] && [ ! -d "$HOME/.$PKG" ] && migrate

# Allow for local status scripts
DIR="/usr/lib/$PKG"
[ -d "$HOME/.$PKG/bin" ] && DIR="$HOME/.$PKG/bin"

# Source global status configuration
. "/etc/$PKG/statusrc" || true
# Source local status configuration
. "$HOME/.$PKG/status" || sed -i "s/-/_/g" "$HOME/.$PKG/status" || true

export P="$1"
if [ "$P" = "--detail" ]; then
	VER=
	if which dpkg-query >/dev/null; then
		VER=`dpkg-query --show $PKG | awk '{print "-" $2 }'`
	fi
	printf "$PKG$VER Detailed Status Navigation\n  Expand all - zr\t\tCollapse all - zm\n  Expand one - zo\t\tCollapse one - zc\n\n"
	for i in `ls "$DIR"`; do
		[ "$i" = "menu" ] && continue
		short=`"$DIR"/$i --short | sed 's/^\s*//' | sed 's/\s*$//' | sed 's/.{[^}]*}//g'` || true
		detail=`"$DIR"/$i --detail | sed '/^$/d' | sed 's/^/\t/g'` || true
		printf "%s\n\t(%s)\n" "$short" "$i"
		[ -n "$detail" ] && printf "%s\n" "$detail"
	done
else
		eval x=\$$P || exit 1
		[ "$x" = "1" ] || exit 0
		[ -x "$DIR"/"$P" ] exec "$DIR"/"$P"
fi
