#!/bin/sh -e
#
#    byobu-launch - call the launcher if we're in an interactive shell
#    Copyright (C) 2010 Canonical Ltd.
#
#    Authors: Dustin Kirkland <kirkland@canonical.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

PKG="byobu"
DATA="$HOME/.$PKG"

# Respect an environment variable passable over SSH to disable
# Byobu launch.  This put that configurability on the SSH client,
# in addition to the server.
# To use over SSH, your /etc/ssh/sshd_config and /etc/ssh/ssh_config
# must pass this variable with AcceptEnv and SendEnv.
# Note that LC_* are passed by default on Debian/Ubuntu.
#  - So we're going to use a variable name that's not already used (LC_BYOBU):
#    http://pubs.opengroup.org/onlinepubs/007908799/xbd/envvar.html
# And in your local bashrc:
#   $HOME/.bashrc:  export LC_BYOBU=0
if [ "$LC_BYOBU" != 0 ]; then
	case "$-" in
		*i*)
			# Attempt to merge shell history across sessions/windows (works with a few exceptions)
			shopt -s histappend || true
			[ -n "$PROMPT_COMMAND" ] && PROMPT_COMMAND="$PROMPT_COMMAND;history -a" || PROMPT_COMMAND="history -a"
			if byobu-launcher; then
				# Wait very briefly for the no-logout flag to get written?
				sleep 0.1
				if [ -e "$DATA/no-logout-on-detach" ] || [ -e "/var/run/screen/S-$USER/byobu.no-logout" ]; then
					# The user does not want to logout on byobu detach
					rm -f "/var/run/screen/S-$USER/byobu.no-logout"	# Remove one-time no-logout flag, if it exists
					true
				else
					exit 0
				fi
			fi
		;;
	esac
fi
true
