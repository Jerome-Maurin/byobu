#!/bin/sh -e
#
#    byobu - screen wrapper script
#    Copyright (C) 2008-2009 Canonical Ltd.
#
#    Authors: Dustin Kirkland <kirkland@canonical.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

PKG="byobu"
VERSION=4.4
[ -z "$BYOBU_PREFIX" ] && export BYOBU_PREFIX="/usr"
export BYOBU_PREFIX
[ -r "/etc/$PKG/socketdir" ] && . "/etc/$PKG/socketdir" || SOCKETDIR="/var/run/screen"
RUN="$SOCKETDIR/S-$USER"
DATA="$HOME/.$PKG"

. "${BYOBU_PREFIX}/lib/${PKG}/.shutil"
if [ ! -x "$BYOBU_PREFIX/bin/$PKG" ]; then
	error "Cannot find $BYOBU_PREFIX/bin/$PKG"
	error "If you have installed it elsewhere, export BYOBU_PREFIX in your shell"
	exit 1
fi

# Add a version argument for debugging purposes
if [ "$#" = "1" ]; then
	case "$1" in
		-v|--version)
			echo "$PKG version $VERSION"
			exec screen -v
			exit 0
		;;
	esac
fi

# Check if we're being autolaunched, and this user explicitly does not want it.
if [ "$0" = "/etc/profile.d/Z98-$PKG.sh" ] && [ -r "$DATA/disable-autolaunch" ]; then
	exit 0
fi

# Sanitize the environment
byobu-janitor --force

# Set the window title
[ -z "$BYOBU_NO_TITLE" ] || printf "\033]0;${USER}@${HOSTNAME:-$(hostname)} - ${PKG}\007"

# Allow override of default window list, with BYOBU_WINDOWS environment variable
CUSTOM_WINDOW_SET=0
if [ -r "$BYOBU_WINDOWS" ]; then
	CUSTOM_WINDOW_SET=1
elif [ -r "$DATA/windows.$BYOBU_WINDOWS" ]; then
	CUSTOM_WINDOW_SET=1
	BYOBU_WINDOWS="$DATA/windows.$BYOBU_WINDOWS"
elif [ "$#" = "0" ]; then
	BYOBU_WINDOWS="$DATA/windows"
else
	BYOBU_WINDOWS="/dev/null"
fi
export BYOBU_WINDOWS

# Launch shell, unless the user has default windows set to launch
uncommented_lines < "$BYOBU_WINDOWS" && DEFAULT_WINDOW= || DEFAULT_WINDOW="shell"

# Check if our terminfo supports 256 colors
if command -v tput >/dev/null; then
	if [ "$(tput colors 2>/dev/null || echo 0)" = "256" ]; then
		SCREEN_TERM="-T screen-256color"
	fi
fi

# Drop a symlink to the ssh socket in $HOME, since we can ensure that exists
if [ -S "$SSH_AUTH_SOCK" ] && [ ! -h "$SSH_AUTH_SOCK" ]; then
	ln -sf "$SSH_AUTH_SOCK" "$DATA/.ssh-agent"
fi

# Some users want to maintain a separate ~/.byoburc from ~/.screenrc,
# if they use both screen and byobu on the same system
if [ -r "$HOME/.byoburc" ]; then
	PROFILE="-c $BYOBU_PREFIX/share/$PKG/profiles/byoburc"
else
	PROFILE="-c $BYOBU_PREFIX/share/$PKG/profiles/screenrc"
fi
NAME="-S $PKG"
# Zero out $NAME if user has specified a -S
for i in "$@"; do
	case $i in -*S|-ls|-list) NAME= ;; esac
done
# Now let's execute screen!
if [ "$#" = "0" ]; then
	out=$(screen -wipe 2>/dev/null) || true
	if [ "$CUSTOM_WINDOW_SET" = "1" ]; then
		# Start new custom window set session
		exec screen $SCREEN_TERM $NAME $PROFILE
	else
		case "$out" in
			*\(*\)*)
				# Select and attach to an existing session
				exec byobu-select-session
			;;
			*)
				# Start new default session
				exec screen $SCREEN_TERM $NAME $PROFILE $DEFAULT_WINDOW
			;;
		esac
	fi
else
	# Launch with command line args
	exec screen $SCREEN_TERM $NAME $PROFILE "$@"
fi
