#!/bin/sh
#
#    byobu-status-tmux: byobu's status gathering for tmux
#
#    Copyright (C) 2011 Dustin Kirkland
#
#    Authors: Dustin Kirkland <kirkland@ubuntu.com>
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, version 3 of the License.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.

PKG="byobu"
[ -z "${BYOBU_PREFIX}" ] && export BYOBU_PREFIX="/usr" || export BYOBU_PREFIX
. "${BYOBU_PREFIX}/lib/${PKG}/.common"

# Make sure status is not disabled
[ -f "$BYOBU_CONFIG_DIR/status.disable" ] && exit 0

# Clean and create cache directories
mkdir -p "$BYOBU_RUN_DIR/status" "$BYOBU_RUN_DIR/.last"

# Source configurations
for i in "${BYOBU_PREFIX}/share/$PKG/status/statusrc" "$BYOBU_CONFIG_DIR/statusrc"; do
	[ -r "$i" ] && . "$i"
done

# Get the current timestamp
get_now; NOW=${_RET}

get_status() {
	local cachepath="$BYOBU_RUN_DIR/status/$1"
	local lastpath="$BYOBU_RUN_DIR/.last/$1"
	local lastrun
	[ -r "$lastpath" ] && read lastrun < "$lastpath" || lastrun=0
	status_freq "$1"
	local expiry=$(($lastrun+$_RET))
	find_script "$1" && . "${_RET}"
	# Update cache now, if necessary
	if [ $NOW -ge $expiry ] || [ "$lastrun" = "0" ]; then
		"__$1" > "$cachepath"
		echo "$NOW" > "$lastpath"
	fi
	IFS= read line < "$cachepath"; printf "$line"
}

case "$1" in
	left)
		IFS= read items < "$BYOBU_CONFIG_DIR/status.tmux.left"
		for i in $items; do
			get_status "$i"
		done
	;;
	right)
		IFS= read items < "$BYOBU_CONFIG_DIR/status.tmux.right"
		for i in $items; do
			get_status "$i"
		done

	;;
esac
